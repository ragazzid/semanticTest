name: Create Release on PR Merge

on:
  push:
    branches:
      - main

jobs:
  create_release:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Read VERSION file
        id: version
        run: |
          cat VERSION
        continue-on-error: true

      - name: Get PR commit messages
        id: pr_commit_messages
        run: |
          # Determinar o commit base
          BASE_BRANCH=$(git merge-base HEAD $(git rev-parse --abbrev-ref HEAD))
          
          # Pegar mensagens de commit relacionadas ao pull request mesclado no branch main
          COMMIT_MESSAGES=$(git log --merges --pretty=format:"- %s" $BASE_BRANCH..HEAD)
          
          echo "Commit messages:"
          echo "$COMMIT_MESSAGES"
          
          # Definir as variÃ¡veis de ambiente
          echo "TAG_NAME=$(cat VERSION)" >> $GITHUB_ENV
          echo "COMMIT_MESSAGES=$COMMIT_MESSAGES" >> $GITHUB_ENV
        continue-on-error: true
      

      - name: Create Git Tag
        id: create_tag
        run: |
          git tag $TAG_NAME
          git push origin $TAG_NAME
        continue-on-error: true

      - name: Create GitHub Release
        id: create_github_release
        run: |
          gh release create $TAG_NAME -F - <<<"$COMMIT_MESSAGES"
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        continue-on-error: true
